---
# This is a generic role test for helm value files
# inputs are:
#   helmtemplate_type: The type of helmtemple, this matches to the chart name
#   chart_path: Helm chart directory path (absolute to project root)
#   value_file: Helmrelease value file path (absolute to project root)
# 

# Check if input value file exists
- name: "Check if value file exists"
  stat:
    path: "{{ value_file }}"
  register: value_stat_result

# create temp test directory
- name: "Check or create test directory"
  file:
    path: "./build/test"
    recurse: yes
    state: directory
  when: value_stat_result.stat.exists == True

# create temp test directory
- name: Load file into memory
  include_vars: "{{ value_file }}"
  when: value_stat_result.stat.exists == True

# Create the helmvalue file to run test
- name: "Create value file"
  local_action: copy content="{{ spec.get('values') | to_nice_yaml }}" dest="./build/test/{{metadata.name}}.yaml"
  when: value_stat_result.stat.exists == True

- debug:
    msg: "Playbook dir {{playbook_dir}} charts path {{chart_path}}"
- debug:
    msg: Executing helm lint -f "/home/blockchain-automation-framework/examples/supplychain-app/configuration/build/test/{{metadata.name}}.yaml" "{{playbook_dir}}/../../../{{chart_path}}/{{charts[helmtemplate_type]}}"
# Execute helm lint. If this fails, fix the errors
- name: "Run helm lint"
  shell: |
    helm lint -f "/home/blockchain-automation-framework/examples/supplychain-app/configuration/build/test/{{metadata.name}}.yaml" "/home/blockchain-automation-framework/examples/supplychain-app/charts/fabric-restserver"
  when: value_stat_result.stat.exists == True